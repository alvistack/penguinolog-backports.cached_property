language: python
os: linux
dist: bionic

install:
  - &upgrade_python_toolset pip install --upgrade pip setuptools wheel
  - &install_test_deps pip install --upgrade -r pytest_requirements.txt

_python:
  - &python36
    name: "Python 3.6"
    python: "3.6"
  - &python37
    name: "Python 3.7"
    python: "3.7"
  - &python38
    name: "Python 3.8"
    python: "3.8"

_helpers:
  - &build_package python setup.py bdist_wheel clean

  - &static_analysis
    stage: Static analysis
    <<: *python37

  - &code_style_check
    stage: Code style check
    <<: *python37

script:
  - python setup.py develop -v
  - py.test

jobs:
  include:
    - <<: *static_analysis
      name: "PyLint"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade "pylint >= 2.3" isort[pyproject,requirements]
      script:
        - python setup.py --version clean
        - pylint backports
    - <<: *static_analysis
      name: "Bandit"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade bandit
      script:
        - bandit -r backports
    - <<: *static_analysis
      name: "PEP8"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade flake8 flake8-bugbear
      script:
        - flake8

    #  - <<: *code_style_check
    #    name: "PEP257"
    #    install:
    #    - *upgrade_python_toolset
    #    - pip install --upgrade pydocstyle
    #    script:
    #    - pydocstyle -v backports
    - <<: *code_style_check
      name: "Black formatting"
      install:
        - *upgrade_python_toolset
        - pip install --upgrade black
      script:
        - black --check backports

    - stage: test
      <<: *python36
    - stage: test
      <<: *python37
    - stage: test
      <<: *python38

    - stage: deploy
      # This prevents job from appearing in test plan unless commit is tagged:
      if: tag IS present
      # Run on pypy to build not cythonized wheel
      <<: *python37
      name: Build universal and cythonized bdist_wheel. Deploy bdist and sdist.
      services:
        - docker
      install:
        - *upgrade_python_toolset
        - pip install -U --upgrade-strategy=eager --no-cache-dir twine
      before_deploy:
        - pip install -U wheel
      script: *build_package
      deploy:
        - provider: pypi
          # `skip_cleanup: true` is required to preserve binary wheels, built
          skip_cleanup: true
          username: penguinolog
          password:
            secure: "Zk+ZC94bNx+N64AwzpSjbzDMM7mBnZb8GTmPcRBNYRD+g1+WaiK9G+fm/yzI3aEw3ryokgU94ZjKkW938YzqojrXPafDqSH4nf6SVUsiDRoJ25ZpK5C1PpSaCotjNzhr1MTZyP019dKG1rVFmr9zK87zvxWFj3vUfOyemj3tAALASBgrxbiSRXTm+B06y6/hhMWl/Jq2dzAin+Ss2wm02MI3Q+NlGAHCRl/c1luTZz4ye+9Nf9BO8Nu5ue3QsntpP/beLAkiVPhC/e35gfOy0G7/Ab/IkLpLs5h6UutTXMx5FEGwHSFjQlkUbpA1bjXEvu52/JR7yXdoGnwZiv6k4zIViRorln+VaG9bTMnnqfNz5HkvZ+KBtYk5YiC5fx/ozXsr8Z/3CL8F3Pv6F2IYeFSR0ftjypKfDjfiu02WUbFnkqlAKX2SvUx5nL7YnhFdjK6cPgl+GRm6mXG2451LyXdihR8mWcEURUAmgRD9kmd7/0+2stKlRJ7wp6Ga0L+Tz4b0oVNdrWJMrCW3uf7qElEa1R5YNOKMyxpS4vyv5AiTrJLI3d+q3+gyrOXh9tnujEWSCAMWbyUCFHGGxaA8Q1ER1V2gVLy3+SCivpDYZHhhmFavZgmjIuxb8I50IaFs0Yt49DIuBq14y4Eh8kwpuFqUFxz4NvxqlP0vWqdZ4SE="
          on:
            tags: true
            distributions: sdist
          skip_upload_docs: true
          skip_existing: true

cache: pip
before_cache:
  - rm -f $HOME/.cache/pip/log/debug.log
